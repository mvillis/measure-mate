"""
Django settings for measure_mate project.

Generated by 'django-admin startproject' using Django 1.8.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
import dj_database_url
from os.path import abspath, basename, dirname, join, normpath

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
DJANGO_ROOT = dirname(dirname(abspath(__file__)))
SITE_ROOT = dirname(DJANGO_ROOT)
SITE_NAME = basename(DJANGO_ROOT)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'p*=rq2jp5_q&wpuory=)d78449^2ytct2m+#5frn8ce3i&1@j*'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DJANGO_DEBUG', True)
ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework_swagger',
    'pipeline',
    'measure_mate',
)

MIDDLEWARE_CLASSES = (
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'csp.middleware.CSPMiddleware',
)

REST_FRAMEWORK = {'PAGE_SIZE': 10}

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.AllowAny',
    ),
    'DEFAULT_FILTER_BACKENDS': (
        'rest_framework.filters.DjangoFilterBackend',
    ),
    'COMPACT_JSON': True,
}

ROOT_URLCONF = 'measure_mate.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'measure_mate.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {'default': dj_database_url.config(conn_max_age=600)}

SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = normpath(join(SITE_ROOT, 'static'))
STATICFILES_DIRS = ()

STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'pipeline.finders.PipelineFinder',
)

# Django Pipeline (and browserify)
STATICFILES_STORAGE = 'pipeline.storage.PipelineCachedStorage'

PIPELINE = {
    'JS_COMPRESSOR': 'pipeline.compressors.uglifyjs.UglifyJSCompressor',
    'CSS_COMPRESSOR': 'pipeline.compressors.NoopCompressor',
    'COMPILERS': ('pipeline_browserify.compiler.BrowserifyCompiler', ),
    'BROWSERIFY_ARGUMENTS': '-t [ babelify --presets [ react ] ]',
    'STYLESHEETS': {
        'measure_mate_css': {
            'source_filenames': (
                'css/measure-mate.css',
                'bower_components/bootstrap/dist/css/bootstrap.css',
                'bower_components/react-select/dist/react-select.css',
            ),
            'output_filename': 'css/measure_mate.css',
        },
    },
    'JAVASCRIPT': {
        'measure_mate_js': {
            'source_filenames': (
                'js/bower_components/jquery/dist/jquery.min.js',
                'js/bower_components/bootstrap/dist/js/bootstrap.js',
                'js/bower_components/classnames/index.js',
                'js/bower_components/moment/moment.js',
                'js/bower_components/plotly.js/plotly.js',
                'js/bower_components/react/react.js',
                'js/bower_components/react/react-dom.js',
                'js/bower_components/react-bootstrap/react-bootstrap.js',
                'js/bower_components/react-input-autosize/dist/react-input-autosize.js',
                'js/bower_components/react-loader/lib/react-loader.js',
                'js/bower_components/react-select/dist/react-select.js',
                'js/bower_components/spin.js/spin.js',
                'js/bower_components/underscore/underscore.js',
                'js/csrf-setup.js',
                'js/app.browserify.js',
            ),
            'output_filename': 'js/measure_mate.js',
        }
    }
}

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse'
        }
    },
    'handlers': {
        'mail_admins': {
            'level': 'ERROR',
            'filters': ['require_debug_false'],
            'class': 'django.utils.log.AdminEmailHandler'
        },
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': True,
        },
        'pipeline.templatetags.pipeline': {
            'handlers': ['console'],
            'level': 'ERROR',
        },
    }
}

TEST_RUNNER = 'django.test.runner.DiscoverRunner'

SWAGGER_SETTINGS = {
    'api_path': '/',
    'api_version': '0.1',
    'info': {
        'title': 'Measure Mate',
        'description': '<p>Simple tool to track maturity assessments.</p>'
                       '<p>Source available at <a href="https://github.com/mvillis/measure-mate">'
                       'https://github.com/mvillis/measure-mate</a>.</p>',
        'license': 'MIT',
        'licenseUrl': 'https://github.com/mvillis/measure-mate/blob/master/LICENSE.txt',
    }
}

SECURE_CONTENT_TYPE_NOSNIFF = True
SECURE_BROWSER_XSS_FILTER = True
SECURE_FRAME_DENY = True
X_FRAME_OPTIONS = 'DENY'

CSP_DEFAULT_SRC = ("'none'",)
CSP_SCRIPT_SRC = ("'unsafe-eval'","'unsafe-inline'","'self'",)
CSP_CONNECT_SRC = ("'self'",)
CSP_STYLE_SRC = ("'unsafe-inline'","'self'",)
CSP_IMG_SRC = ("'self'","data:","blob:",)
CSP_FONT_SRC = ("'self'",)
CSP_EXCLUDE_URL_PREFIXES = ("/admin",)
